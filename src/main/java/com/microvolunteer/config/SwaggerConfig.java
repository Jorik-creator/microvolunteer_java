package com.microvolunteer.config;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.security.SecurityRequirement;
import io.swagger.v3.oas.models.security.SecurityScheme;
import io.swagger.v3.oas.models.servers.Server;
import io.swagger.v3.oas.models.Components;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

@Configuration
public class SwaggerConfig {

    @Value("${server.port:8081}")
    private String serverPort;

    @Bean
    public OpenAPI customOpenAPI() {
        return new OpenAPI()
                .info(new Info()
                        .title("ü§ù Microvolunteer API")
                        .description("""
                                ## –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –º—ñ–∫—Ä–æ–≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–∞
                                
                                API –¥–ª—è –∑'—î–¥–Ω–∞–Ω–Ω—è –≤–æ–ª–æ–Ω—Ç–µ—Ä—ñ–≤ —Ç–∞ –ª—é–¥–µ–π, —è–∫—ñ –ø–æ—Ç—Ä–µ–±—É—é—Ç—å –¥–æ–ø–æ–º–æ–≥–∏.
                                
                                ### –û—Å–Ω–æ–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:
                                - üë§ **–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏** - —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è, –ø—Ä–æ—Ñ—ñ–ª—ñ, —Ç–∏–ø–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
                                - üìã **–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏** - —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è, –ø–æ—à—É–∫, —É—á–∞—Å—Ç—å —É –∑–∞–≤–¥–∞–Ω–Ω—è—Ö
                                - üè∑Ô∏è **–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑–∞–≤–¥–∞–Ω—å** - –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—è –∑–∞–≤–¥–∞–Ω—å –∑–∞ —Ç–∏–ø–∞–º–∏
                                - ü§ù **–°–∏—Å—Ç–µ–º–∞ —É—á–∞—Å—Ç—ñ** - –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è —Ç–∞ –∑–∞–ª–∏—à–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å
                                - üîê **–ê–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è** - —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ Keycloak
                                
                                ### –¢–∏–ø–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:
                                - **VOLUNTEER** - –≤–æ–ª–æ–Ω—Ç–µ—Ä–∏, —è–∫—ñ –¥–æ–ø–æ–º–∞–≥–∞—é—Ç—å
                                - **ORGANIZER** - –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∏ –∑–∞—Ö–æ–¥—ñ–≤  
                                - **AFFECTED_PERSON** - –ª—é–¥–∏, —è–∫—ñ –ø–æ—Ç—Ä–µ–±—É—é—Ç—å –¥–æ–ø–æ–º–æ–≥–∏
                                - **ADMIN** - –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ —Å–∏—Å—Ç–µ–º–∏
                                
                                ### –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è:
                                –î–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –∑–∞—Ö–∏—â–µ–Ω–∏—Ö endpoints –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ Bearer —Ç–æ–∫–µ–Ω —É –∑–∞–≥–æ–ª–æ–≤–∫—É Authorization.
                                """)
                        .version("1.0.0")
                        .contact(new Contact()
                                .name("Microvolunteer Team")
                                .email("contact@microvolunteer.com")
                                .url("https://github.com/microvolunteer"))
                        .license(new License()
                                .name("MIT License")
                                .url("https://opensource.org/licenses/MIT")))
                .servers(List.of(
                        new Server()
                                .url("http://localhost:" + serverPort)
                                .description("–õ–æ–∫–∞–ª—å–Ω–∏–π —Å–µ—Ä–≤–µ—Ä —Ä–æ–∑—Ä–æ–±–∫–∏"),
                        new Server()
                                .url("https://api.microvolunteer.com")
                                .description("–ü—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä")
                ))
                .components(new Components()
                        .addSecuritySchemes("Bearer Authentication",
                                new SecurityScheme()
                                        .type(SecurityScheme.Type.HTTP)
                                        .scheme("bearer")
                                        .bearerFormat("JWT")
                                        .in(SecurityScheme.In.HEADER)
                                        .name("Authorization")
                                        .description("–í–≤–µ–¥—ñ—Ç—å JWT —Ç–æ–∫–µ–Ω —É —Ñ–æ—Ä–º–∞—Ç—ñ: Bearer {—Ç–æ–∫–µ–Ω}")))
                .addSecurityItem(new SecurityRequirement().addList("Bearer Authentication"));
    }
}
