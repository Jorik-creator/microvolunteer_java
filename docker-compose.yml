version: '3.8'

services:
  # PostgreSQL для продакшену
  postgres:
    image: postgres:17.2-alpine
    container_name: microvolunteer-postgres
    environment:
      POSTGRES_DB: microvolunteer
      POSTGRES_USER: ${DB_USERNAME:-microvolunteer}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - microvolunteer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-microvolunteer}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Keycloak PostgreSQL база
  keycloak-postgres:
    image: postgres:17.2-alpine
    container_name: microvolunteer-keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak_password}
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    networks:
      - microvolunteer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Keycloak для продакшену
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.7
    container_name: microvolunteer-keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak_password}
      KC_HOSTNAME: ${KEYCLOAK_HOSTNAME:-localhost}
      KC_HOSTNAME_PORT: ${KEYCLOAK_PORT:-8080}
      KC_HTTP_ENABLED: true
      KC_HTTP_PORT: 8080
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USERNAME:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
    command: ["start", "--import-realm"]
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    ports:
      - "${KEYCLOAK_PORT:-8080}:8080"
    volumes:
      - ./docker/keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json:ro
    networks:
      - microvolunteer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Spring Boot додаток
  microvolunteer-springboot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: microvolunteer-springboot
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME:-microvolunteer}
      DB_PASSWORD: ${DB_PASSWORD:-secure_password}
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_USERNAME:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-that-should-be-at-least-256-bits-long}
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    ports:
      - "${APP_PORT:-8081}:8081"
    volumes:
      - app_logs:/app/logs
    networks:
      - microvolunteer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8081/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

volumes:
  postgres_data:
  keycloak_postgres_data:
  app_logs:

networks:
  microvolunteer-network:
    driver: bridge
